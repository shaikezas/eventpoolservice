<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd

			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<bean id="commonDataPropertiesConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:META-INF/properties/${profile}/eventpool.properties</value>
			</list>
		</property>
		<property name="systemPropertiesModeName">
			<value>SYSTEM_PROPERTIES_MODE_OVERRIDE</value>
		</property>
		<property name="placeholderPrefix" value="$EVENT_POOL{" />
	</bean>

	<context:annotation-config />
	<context:component-scan base-package="com.eventpool.common" />

	<jpa:repositories base-package="com.eventpool.common.repositories"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="transactionManager" >
	</jpa:repositories>

	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" p:entityManagerFactory-ref="entityManagerFactory" />

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" p:dataSource-ref="dataSource">

		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" >
			<property name="showSql" value="true" />
                <property name="generateDdl" value="true" />
                </bean>
		</property>

		<property name="persistenceUnitName" value="eventpool-persistence-unit" />
		<property name="persistenceXmlLocation" value="classpath:/META-INF/eventpool/persistence.xml" />


		<!-- <property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">$EVENT_POOL{hibernate.naming_strategy}</prop> <prop key="hibernate.naming_strategy">$EVENT_POOL{hibernate.naming_strategy}</prop>
				<prop key="hibernate.dialect">$EVENT_POOL{hibernate.dialect}</prop>
				<prop key="hibernate.generate_statistics">$EVENT_POOL{hibernate.generate_statistics}</prop>
				<prop key="hibernate.cache.use_structured_entries">$EVENT_POOL{hibernate.cache.use_structured_entries}</prop>
				<prop key="hibernate.show_sql">$EVENT_POOL{hibernate.show_sql}</prop>
				 <prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">$EVENT_POOL{hibernate.format_sql}</prop>
				 <prop key="hibernate.hbm2ddl.auto">$EVENT_POOL{hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.cache.use_second_level_cache">$EVENT_POOL{hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.use_query_cache">$EVENT_POOL{hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.cache.provider_class">$EVENT_POOL{hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.region.factory_class">$EVENT_POOL{hibernate.cache.region.factory_class}</prop>
				<prop key="hibernate.cache.region_prefix">$EVENT_POOL{hibernate.cache.region_prefix}</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">
					$EVENT_POOL{hibernate.cache.provider_configuration_file_resource_path}
				</prop>
				<prop key="hibernate.connection.zeroDateTimeBehavior">$EVENT_POOL{hibernate.connection.zeroDateTimeBehavior}</prop>
				<prop key="hibernate.jdbc.batch_size">$EVENT_POOL{hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.connection.username">$EVENT_POOL{hibernate.connection.username}</prop>
				<prop key="hibernate.connection.password">$EVENT_POOL{hibernate.connection.password}</prop>
				<prop key="hibernate.connection.isolation">2</prop> 
			</props>
		</property> -->
	</bean>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="commonDataSourceJndi" />
		<property name="defaultObject" ref="pooledDataSource" />
	</bean>

	<bean id="commonDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="$EVENT_POOL{hibernate.connection.driver_class}" />
		<property name="url" value="$EVENT_POOL{hibernate.connection.url}" />
	</bean>

	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="$EVENT_POOL{hibernate.connection.driver_class}" />
		<property name="jdbcUrl" value="$EVENT_POOL{hibernate.connection.url}" />
		<property name="user" value="$EVENT_POOL{hibernate.connection.username}" />
		<property name="password" value="$EVENT_POOL{hibernate.connection.password}" />

		<property name="initialPoolSize" value="$EVENT_POOL{hibernate.initialPoolSize}" />
		<property name="minPoolSize" value="$EVENT_POOL{hibernate.minPoolSize}" />
		<property name="maxPoolSize" value="$EVENT_POOL{hibernate.maxPoolSize}" />
		<property name="maxIdleTime" value="$EVENT_POOL{hibernate.maxIdleTime}" />
		<property name="acquireIncrement" value="$EVENT_POOL{hibernate.acquireIncrement}" />
		<property name="maxStatements" value="$EVENT_POOL{hibernate.maxStatements}" /><!-- Recovery from DB out age -->
		<property name="acquireRetryAttempts" value="$EVENT_POOL{hibernate.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="$EVENT_POOL{hibernate.acquireRetryDelay}" /><!-- Required. http://www.mchange.com/projects/c3p0/#idleConnectionTestPeriod -->
		<property name="idleConnectionTestPeriod" value="$EVENT_POOL{hibernate.idleConnectionTestPeriod}" /><!-- c3p0 will test all idle, 
			pooled but unchecked-out connections, every this number of seconds. -->
		<property name="testConnectionOnCheckin" value="true" /><!-- Test the connection when it is returned back to the pool. -->
		<property name="automaticTestTable" value="con_test" /><!-- For connection testing Or -->
		<property name="preferredTestQuery" value="select 1" />
	</bean>

	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
</beans>
